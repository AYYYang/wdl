{
  "ll1": {
    "start": "wdl",
    "rules": [
      "wdl := list(wdl_entity)",
      "wdl_entity := composite_task",
      "composite_task := 'composite_task' + 'identifier' + 'lbrace' + list(composite_task_entity) + 'rbrace' -> CompositeTask( name=$1, body=$3 )",
      "composite_task_entity := step | for_loop | composite_task",
      "for_loop := 'for' + 'lparen' + 'identifier' + 'in' + 'identifier' + 'rparen' + 'lbrace' + list(composite_task_entity) + 'rbrace' -> ForLoop( collection=$4, item=$2, body=$7 )",
      "step := 'step' + task_identifier + optional(step_name) + 'lbrace' + list(step_attr) + 'rbrace' -> Step( task=$1, name=$2, body=$4 )",
      "task_identifier := 'identifier' + optional(task_attrs) -> Task(name=$0, attributes=$1)",
      "task_attrs := 'lsquare' + list(task_attr) + 'rsquare' -> $1",
      "task_attr := 'identifier' + 'assign' + task_attr_value -> TaskAttribute(key=$0, value=$2)",
      "task_attr_value := 'identifier' | 'string' | 'number'",
      "step_name := 'as' + 'identifier' -> $1",
      "step_attr := step_input_list | step_output_list",
      "step_input_list := 'input' + 'colon' + list(step_input, 'comma')  + 'semi' -> StepInputList( inputs=$2 )",
      "step_input := 'identifier' + 'assign' + variable -> StepInput(parameter=$0, value=$2)",
      "step_output_list := 'output' + 'colon' + list(step_output, 'comma') + 'semi' -> StepOutputList( outputs=$2 )",
      "step_output := 'file' + 'lparen' + 'string' + 'rparen' + step_output_location -> StepFileOutput( file=$2, var=$4 )",
      "step_output_location :=  'as' + variable -> OutputVariable( var=$1 )",
      "step_output_location :=  'into' + variable -> OutputListAppend( var=$1 )",
      "variable := 'identifier' + optional(variable_member) -> Variable(name=$0, member=$1)",
      "variable_member := 'dot' + 'identifier -> $1"
    ]
  }
}
