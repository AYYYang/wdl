{
  "ll1": {
    "start": "graph",
    "rules": [
      "graph := optional('strict') + graph_type + optional('identifier') + 'lbrace' + tlist(stmt, 'semi') + 'rbrace' + 'semi' -> Graph(strict=$0, type=$1, name=$2, statements=$4)",
      "graph_type := 'graph' | 'digraph'",
      "stmt := node_stmt | edge_stmt | attr_stmt | subgraph",
      "stmt := 'value_assign_hint' + 'identifier' + 'assign' + 'identifier' -> Assign(key=$1, value=$3)",
      "attr_stmt := attr_type + list(attr) -> Attribute(type=$0, values=$1)",
      "attr_type := 'graph' | 'node' | 'edge'",
      "attr := 'lsquare' + list(attr_values, 'comma') + 'rsquare' -> $1",
      "attr_values := 'identifier' + optional(attr_value_assign) -> AttributeValue(key=$0, value=$1)",
      "attr_value_assign := 'assign' + 'identifier' -> $1",
      "edge_stmt := 'edge_stmt_hint' + node_or_subgraph + mlist(edge_rhs, 1) + list(attr) -> Edge(node=$1, edges=$2, attributes=$3)",
      "edge_rhs := edge_op + node_or_subgraph -> EdgeDeclaration( edge_type=$0, node=$1 )",
      "node_or_subgraph := node_id | subgraph",
      "edge_op := 'arrow' | 'dashdash'",
      "node_stmt := 'node_stmt_hint' + node_id + list(attr) -> Node(id=$1, attributes=$2)",
      "node_id := 'identifier' + optional(port) -> NodeId(name=$0, port=$1)",
      "port := 'colon' + port_sub -> $1",
      "port_sub := 'identifier' + optional(port_compass_pt) -> Port(name=$0, compass_point=$1)",
      "port_compass_pt := 'colon' + 'identifier' -> $1",
      "port_sub := 'colon' + 'identifier' -> Port(name=$1)",
      "subgraph := optional(subgraph_name) + 'lbrace' + tlist(stmt, 'semi') + 'rbrace' -> SubGraph(name=$0, statements=$2)",
      "subgraph_name := 'subgraph' + optional('identifier') - > $1"
    ]
  }
}
